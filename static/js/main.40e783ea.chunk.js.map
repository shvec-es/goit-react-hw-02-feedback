{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["Title","styled","h2","Section","title","children","Wrapper","div","Button","button","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","option","index","type","name","onClick","Report","Statistics","good","neutral","bad","total","positivePercentage","Notice","p","Notification","message","h1","App","state","handleClick","e","currentTarget","setState","prevState","countTotalFeedback","values","reduce","acc","value","countPositiveFeedbackPercentage","Number","parseInt","this","Component","ReactDOM","render","document","getElementById"],"mappings":"4RAIMA,EAAQC,IAAOC,GAAV,+FAmBIC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,cAACL,EAAD,UAAQI,IACPC,MCVDC,EAAUL,IAAOM,IAAV,0EAKPC,EAASP,IAAOQ,OAAV,8VA2CGC,EAxBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,cAACN,EAAD,UACGO,OAAOC,KAAKH,GAASI,KAAI,SAACC,EAAQC,GACjC,OACE,cAACT,EAAD,CAEEU,KAAK,SACLC,KAAMH,EACNI,QAASR,EAJX,SAMGI,GALIC,SC9BXI,EAASpB,IAAOM,IAAV,8FA0BGe,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,eAACN,EAAD,WACE,uCAAUE,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,WCbAC,EAAS3B,IAAO4B,EAAV,8FAcGC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,cAACH,EAAD,UAASG,KCJZ/B,EAAQC,IAAO+B,GAAV,0EAKL1B,EAAUL,IAAOM,IAAV,kJAQP0B,E,4MAGJC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPU,YAAc,SAAAC,GACZ,IAAQjB,EAASiB,EAAEC,cAAXlB,KACR,EAAKmB,UAAS,SAAAC,GACZ,OAAO,eAAGpB,EAAOoB,EAAUpB,GAAQ,O,EAIvCqB,mBAAqB,WACnB,OAAO3B,OAAO4B,OAAO,EAAKP,OAAOQ,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,I,EAGvEC,gCAAkC,SAAAD,GAChC,OAAOE,OAAOC,SAAU,EAAKb,MAAMX,KAAOqB,EAAS,M,4CAGrD,WACE,MAA+BI,KAAKd,MAA5BX,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQsB,KAAKR,qBACbb,EAAqBqB,KAAKH,gCAAgCnB,GAEhE,OACE,gCACE,cAAC,EAAD,wCACA,eAAC,EAAD,WACE,cAAC,EAAD,CAAStB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEO,QAASqC,KAAKd,MACdtB,gBAAiBoC,KAAKb,gBAG1B,cAAC,EAAD,CAAS/B,MAAM,aAAf,SACGsB,EACC,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,cAAC,EAAD,CAAcI,QAAQ,qC,GAjDlBkB,aA0DHhB,ICzEfiB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.40e783ea.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Title = styled.h2`\r\n  font-size: 1.5em;\r\n  text-align: center;\r\n  color: SaddleBrown;\r\n`;\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <Title>{title}</Title>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  color: Chocolate;\r\n  background: white;\r\n  font-size: 1em;\r\n  margin: 1em;\r\n  padding: 0.25em 1em;\r\n  border: 2px solid Chocolate;\r\n  border-radius: 3px;\r\n  text-transform: capitalize;\r\n  cursor: pointer;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    color: white;\r\n    background: Chocolate;\r\n    outline: 2px solid Chocolate;\r\n  }\r\n`;\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <Wrapper>\r\n      {Object.keys(options).map((option, index) => {\r\n        return (\r\n          <Button\r\n            key={index}\r\n            type=\"button\"\r\n            name={option}\r\n            onClick={onLeaveFeedback}\r\n          >\r\n            {option}\r\n          </Button>\r\n        );\r\n      })}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.objectOf(PropTypes.number.isRequired),\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Report = styled.div`\r\n  font-size: 1.25em;\r\n  padding-left: 15px;\r\n  color: Chocolate;\r\n`;\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <Report>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total: {total}</p>\r\n      <p>Positive feedback: {positivePercentage}%</p>\r\n    </Report>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notice = styled.p`\r\n  font-size: 1.25em;\r\n  text-align: center;\r\n  color: Chocolate;\r\n`;\r\n\r\nconst Notification = ({ message }) => {\r\n  return <Notice>{message}</Notice>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\nimport Section from 'components/Section';\nimport FeedbackOptions from 'components/FeedbackOptions';\nimport Statistics from 'components/Statistics';\nimport Notification from 'components/Notification';\nimport styled from 'styled-components';\n\nconst Title = styled.h1`\n  color: SaddleBrown;\n  text-align: center;\n`;\n\nconst Wrapper = styled.div`\n  border: 2px solid SaddleBrown;\n  border-radius: 5px;\n  width: 400px;\n  margin-top: 50px;\n  margin-left: 100px;\n`;\n\nclass App extends Component {\n  static propTypes = {};\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleClick = e => {\n    const { name } = e.currentTarget;\n    this.setState(prevState => {\n      return { [name]: prevState[name] + 1 };\n    });\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, value) => acc + value, 0);\n  };\n\n  countPositiveFeedbackPercentage = value => {\n    return Number.parseInt((this.state.good / value) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage(total);\n\n    return (\n      <div>\n        <Title>Welcome to cafe Expresso!</Title>\n        <Wrapper>\n          <Section title=\"Please leave feedback\">\n            <FeedbackOptions\n              options={this.state}\n              onLeaveFeedback={this.handleClick}\n            />\n          </Section>\n          <Section title=\"Statistics\">\n            {total ? (\n              <Statistics\n                good={good}\n                neutral={neutral}\n                bad={bad}\n                total={total}\n                positivePercentage={positivePercentage}\n              />\n            ) : (\n              <Notification message=\"There is no feedback\" />\n            )}\n          </Section>\n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}